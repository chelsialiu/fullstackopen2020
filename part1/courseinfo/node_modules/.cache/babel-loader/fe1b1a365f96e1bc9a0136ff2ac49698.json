{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chelsialiu/Documents/projects/fullstackopen2020/part1/courseinfo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Content = props => {\n  console.log(\"props\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map((name, exercises) => /*#__PURE__*/_jsxDEV(Part, {\n      name: name,\n      numOfExercises: exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Content;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.name, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Part;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  const course = \"Half Stack application development\";\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: [part1, part2, part3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/chelsialiu/Documents/projects/fullstackopen2020/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","Header","props","course","Content","console","log","parts","map","name","exercises","Part","Total","total","App","part1","part2","part3","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,cAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMF,M;;AAMN,MAAMG,OAAO,GAAIF,KAAD,IAAW;AACzBG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,sBACE;AAAA,cACGA,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,SAAP,kBACjB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,cAAc,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YADC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;MAAMN,O;;AAWN,MAAMO,IAAI,GAAIT,KAAD,IAAW;AACtB,sBACE;AAAA,eACGA,KAAK,CAACO,IADT,OACgBP,KAAK,CAACQ,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMC,I;;AAQN,MAAMC,KAAK,GAAIV,KAAD,IAAW;AACvB,sBACE;AAAA,uCAAwBA,KAAK,CAACW,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMD,K;;AAMN,MAAME,GAAG,GAAG,MAAM;AAChB,QAAMX,MAAM,GAAG,oCAAf;AACA,QAAMY,KAAK,GAAG;AACZN,IAAAA,IAAI,EAAE,uBADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAMM,KAAK,GAAG;AACZP,IAAAA,IAAI,EAAE,0BADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAMO,KAAK,GAAG;AACZR,IAAAA,IAAI,EAAE,sBADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEP;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,CAACY,KAAD,EAAQC,KAAR,EAAeC,KAAf;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtBD;;MAAMH,G;AAwBNd,QAAQ,CAACkB,MAAT,eACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Content = (props) => {\n  console.log(\"props\", props);\n  return (\n    <div>\n      {props.parts.map((name, exercises) => (\n      <Part name={name} numOfExercises={exercises}></Part>\n      ))}\n    </div>\n  )\n}\n\nconst Part = (props) => {\n  return (\n    <p>\n      {props.name} {props.exercises}\n    </p>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <p>Number of exercises {props.total}</p>\n  )\n}\n\nconst App = () => {\n  const course = \"Half Stack application development\"\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  }\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  }\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  }\n\n  return (\n    <div>\n      <Header course={course}></Header>\n      <Content parts={[part1, part2, part3]}></Content>\n      {/* <Total total={}></Total> */}\n    </div>\n  )\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}